{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Home.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './Home.css';\nimport '../App';\nimport './Home'; //import { render } from \"react-dom\";\n\nimport { Link } from \"react-router-dom\"; // npm install react-transition-group@1.x --save\n//import { CSSTransitionGroup } from 'react-transition-group' // ES6\n// var CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup') // ES5 with npm\n\nimport ReactCSSTransitionReplace from 'react-css-transition-replace'; // now trying this: npm install --save react-css-transition-replace\n// npm install react-reveal --save\n\nclass PageSelector extends React.Component {\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.emphasis,\n      onClick: e => this.props.changePage(this.props.text, e),\n      dangerouslySetInnerHTML: {\n        __html: this.props.text\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }));\n  }\n\n} // Link to project; we define which project to link to by using the same process in App.js\n\n\nclass Project extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects/\" + this.props.title.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"project\",\n      id: this.props.title.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.title\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.description\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }))));\n  }\n\n} // Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\n\n\nclass ProjectList extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.projects.filter(function (u, i) {\n      // filter to only projects we need to show based on selection\n      if (this.props.selection === 'UXR') return u.uxr !== undefined;else return u.design !== undefined;\n    }, this).map( // then iterate them through\n    function (project, i) {\n      return React.createElement(Project, {\n        title: project.title,\n        description: project.description,\n        key: i,\n        selection: this.props.selection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n}\n\nclass MePage extends React.Component {\n  render() {\n    return (// we must return one parent div; you cant return two childs for some rando reason\n      React.createElement(\"div\", {\n        className: \"mePage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Hayyyyy girl\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Hows it hanging?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"left or right... heh\"), React.createElement(\"div\", {\n        className: \"extradiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"this is an extra div\"))\n    );\n  }\n\n} // Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\n\n/* Receives the following props:\n- projects: json data of all projects\n- selected: the value that we should display\n- headerOrder: the order of the headers\n- shift: how we should shift upon entering\n*/\n\n\nclass Home extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }  // boilerplate code\n  render() {\n    const selected = this.props.selected;\n    let content;\n\n    if (selected !== \"Me\") {\n      content = React.createElement(\"div\", {\n        key: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidenav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Project 1\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Project 2\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Project 3\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Project 4\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Project 5\")), React.createElement(\"div\", {\n        className: \"projectcontent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(ProjectList, {\n        projects: this.props.projects,\n        selection: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })));\n    } else content = React.createElement(MePage, {\n      key: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    });\n\n    console.log(this.props.shift); // Added a link here\n\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mainheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Jen Goldberg\"), React.createElement(\"div\", {\n      className: \"pageselections\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.props.headerOrder.map(function (u, i) {\n      return React.createElement(PageSelector, {\n        text: u,\n        key: i,\n        changePage: this.props.changePage,\n        emphasis: i === 1 ? \"emphasis\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n    }, this))), React.createElement(ReactCSSTransitionReplace, {\n      transitionName: \"fade-wait\",\n      transitionEnterTimeout: 1000,\n      transitionLeaveTimeout: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      key: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, content)));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Home.js"],"names":["React","Link","ReactCSSTransitionReplace","PageSelector","Component","render","props","emphasis","e","changePage","text","__html","Project","title","replace","description","ProjectList","projects","filter","u","i","selection","uxr","undefined","design","map","project","MePage","Home","selected","content","console","log","shift","headerOrder"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './Home.css';\nimport '../App';\nimport './Home';\n//import { render } from \"react-dom\";\nimport { Link } from \"react-router-dom\"\n\n// npm install react-transition-group@1.x --save\n//import { CSSTransitionGroup } from 'react-transition-group' // ES6\n// var CSSTransitionGroup = require('react-transition-group/CSSTransitionGroup') // ES5 with npm\nimport ReactCSSTransitionReplace from 'react-css-transition-replace';\n\n// now trying this: npm install --save react-css-transition-replace\n\n\n// npm install react-reveal --save\n\n\nclass PageSelector extends React.Component {\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return (\n      <div className=\"column\">\n        <span\n          className={this.props.emphasis}\n          onClick={(e) => this.props.changePage(this.props.text, e)}\n          dangerouslySetInnerHTML={{ __html: this.props.text}}\n        />\n      </div>\n    );\n  }\n}\n\n// Link to project; we define which project to link to by using the same process in App.js\nclass Project extends React.Component {\n  render() {\n    return (\n        <div className=\"projectcontainer\">\n          <Link to={\"/projects/\" + this.props.title.replace(/\\s/g, '')}>\n            <div className=\"project\" id={this.props.title.replace(/\\s/g, '')}>\n              <p dangerouslySetInnerHTML={{ __html: this.props.title}}/>\n              <h2 dangerouslySetInnerHTML={{ __html: this.props.description}}/>\n            </div>\n          </Link>\n        </div>\n    )\n  }\n}\n\n// Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\nclass ProjectList extends React.Component {\n\n  render() {\n    return (\n      <div className=\"projectlist\">\n        {this.props.projects.filter(function(u, i) { // filter to only projects we need to show based on selection\n          if(this.props.selection === 'UXR') return u.uxr !== undefined\n          else return u.design !== undefined\n        }, this).map( // then iterate them through\n          function(project, i) {\n            return <Project title={project.title} description={project.description} key={i} selection={this.props.selection}/>\n          }, this\n        )}\n      </div>\n    );\n  }\n}\n\nclass MePage extends React.Component {\n\n  render() {\n    return ( // we must return one parent div; you cant return two childs for some rando reason\n      <div className=\"mePage\">\n          <h2>Hayyyyy girl</h2>\n          <h3>Hows it hanging?</h3>\n          <p>left or right... heh</p>\n          <div className=\"extradiv\">this is an extra div</div>\n      </div>\n    );\n  }\n}\n\n\n// Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\n/* Receives the following props:\n- projects: json data of all projects\n- selected: the value that we should display\n- headerOrder: the order of the headers\n- shift: how we should shift upon entering\n*/\nclass Home extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }  // boilerplate code\n\n  render() {\n    const selected = this.props.selected;\n\n    let content;\n    if(selected !== \"Me\") {\n      content = (\n        <div key={1}>\n          <div className=\"sidenav\"> {/*TODO: testing*/}\n            <div className=\"sidenavTester\">Project 1</div>\n            <div className=\"sidenavTester\">Project 2</div>\n            <div className=\"sidenavTester\">Project 3</div>\n            <div className=\"sidenavTester\">Project 4</div>\n            <div className=\"sidenavTester\">Project 5</div>\n          </div>\n          <div className=\"projectcontent\">\n            <ProjectList projects={this.props.projects} selection={selected}/>\n          </div>\n        </div>\n      )\n    }\n    else content = <MePage key={2}/>\n\n    console.log(this.props.shift)\n\n    // Added a link here\n    return (\n      <div className=\"home\">\n        <div className=\"mainheader\">\n          <h1>Jen Goldberg</h1>\n          <div className=\"pageselections\">\n            { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n              this.props.headerOrder.map(function(u, i) {\n                return <PageSelector text={u} key={i} changePage={this.props.changePage} emphasis={i===1? \"emphasis\": \"\"}/>\n              }, this)\n            }\n          </div>\n        </div>\n\n        {/* Syntax from http://reactcommunity.org/react-transition-group/transition */}\n        <ReactCSSTransitionReplace transitionName=\"fade-wait\" transitionEnterTimeout={1000} transitionLeaveTimeout={400}>\n          <div className=\"main\" key={2}>\n              {content}\n          </div>\n        </ReactCSSTransitionReplace>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}