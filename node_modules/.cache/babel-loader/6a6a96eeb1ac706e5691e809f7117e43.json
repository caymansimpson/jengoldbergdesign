{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Home.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './Home.css';\nimport '../App';\nimport './Home'; //import { render } from \"react-dom\";\n\nimport { Link } from \"@reach/router\";\n\nclass PageSelector extends React.Component {\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.emphasis,\n      onClick: e => this.props.changePage(this.props.text, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.text));\n  }\n\n}\n\nclass Project extends React.Component {\n  render() {\n    console.log(this.props.title, this.props.selection);\n    return React.createElement(Link, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"project\",\n      id: this.props.title.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.props.description))));\n  }\n\n} // Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\n\n\nclass ProjectList extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.props.projects.filter(function (u, i) {\n      // filter to only projects we need to show based on selection\n      if (this.props.selection === 'UXR') return u.uxr !== undefined;else return u.design !== undefined;\n    }, this).map( // then iterate them through\n    function (project, i) {\n      return React.createElement(Project, {\n        title: project.title,\n        description: project.description,\n        key: i,\n        selection: this.props.selection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n} // Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.headerOrder = [\"Graphic Design\", \"UXR\", \"Me\"]; // This is default\n  } // boilerplate code\n\n\n  render() {\n    const selected = this.props.selected; // Figure out which direction we should shift the array and shift it\n\n    if (this.headerOrder.indexOf(selected) === 0) {\n      this.headerOrder.unshift(this.headerOrder.pop());\n      console.log(\"shift right\");\n    } else if (this.headerOrder.indexOf(selected) === 2) {\n      this.headerOrder.push(this.headerOrder.shift());\n      console.log(\"shift left\");\n    } else {\n      console.log(\"rendering w/ no shift\");\n    }\n\n    let content;\n\n    if (selected !== \"Me\") {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidenav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"\\\" \\\"\"), React.createElement(\"div\", {\n        className: \"projectcontent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(ProjectList, {\n        projects: this.props.projects,\n        selection: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })));\n    } else content = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Will develop soon!\"); // Added a link here\n\n\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mainheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Jen Goldberg\"), React.createElement(\"div\", {\n      className: \"pageselections\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.headerOrder.map(function (u, i) {\n      return React.createElement(PageSelector, {\n        text: u,\n        key: i,\n        changePage: this.props.changePage,\n        emphasis: i === 1 ? \"emphasis\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    }, this))), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, content));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Home.js"],"names":["React","Link","PageSelector","Component","render","props","emphasis","e","changePage","text","Project","console","log","title","selection","replace","description","ProjectList","projects","filter","u","i","uxr","undefined","design","map","project","Home","constructor","headerOrder","selected","indexOf","unshift","pop","push","shift","content"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './Home.css';\nimport '../App';\nimport './Home';\n//import { render } from \"react-dom\";\nimport { Link } from \"@reach/router\"\n\n\nclass PageSelector extends React.Component {\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return (\n      <div className=\"column\">\n        <span className={this.props.emphasis} onClick={(e) => this.props.changePage(this.props.text, e)}>\n          {this.props.text}\n        </span>\n      </div>\n    );\n  }\n}\n\nclass Project extends React.Component {\n  render() {\n    console.log(this.props.title, this.props.selection)\n    return (\n      <Link>\n        <div className=\"projectcontainer\">\n          <div className=\"project\" id={this.props.title.replace(/\\s/g, '')}>\n            <p>{this.props.title}</p>\n            <h2>{this.props.description}</h2>\n          </div>\n        </div>\n      </Link>\n    )\n  }\n}\n\n// Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\nclass ProjectList extends React.Component {\n\n  render() {\n    return (\n      <div className=\"projectlist\">\n        {this.props.projects.filter(function(u, i) { // filter to only projects we need to show based on selection\n          if(this.props.selection === 'UXR') return u.uxr !== undefined\n          else return u.design !== undefined\n        }, this).map( // then iterate them through\n          function(project, i) {\n            return <Project title={project.title} description={project.description} key={i} selection={this.props.selection}/>\n          }, this\n        )}\n      </div>\n    );\n  }\n}\n\n\n// Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.headerOrder = [\"Graphic Design\", \"UXR\", \"Me\"] // This is default\n  }  // boilerplate code\n\n  render() {\n    const selected = this.props.selected;\n\n    // Figure out which direction we should shift the array and shift it\n    if(this.headerOrder.indexOf(selected) === 0) {\n      this.headerOrder.unshift(this.headerOrder.pop())\n      console.log(\"shift right\")\n    }\n    else if(this.headerOrder.indexOf(selected) === 2) {\n      this.headerOrder.push(this.headerOrder.shift())\n      console.log(\"shift left\")\n    } else {\n      console.log(\"rendering w/ no shift\")\n    }\n\n    let content;\n    if(selected !== \"Me\") {\n      content = (\n        <div>\n          <div className=\"sidenav\">\" \"</div>\n          <div className=\"projectcontent\">\n            <ProjectList projects={this.props.projects} selection={selected}/>\n          </div>\n        </div>\n      )\n    }\n    else content = <p>Will develop soon!</p>\n\n    // Added a link here\n    return (\n      <div className=\"home\">\n        <div className=\"mainheader\">\n          <h1>Jen Goldberg</h1>\n          <div className=\"pageselections\">\n            { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n              this.headerOrder.map(function(u, i) {\n                return <PageSelector text={u} key={i} changePage={this.props.changePage} emphasis={i===1? \"emphasis\": \"\"}/>\n              }, this)\n            }\n          </div>\n        </div>\n\n        <div className=\"main\">\n          {content}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}