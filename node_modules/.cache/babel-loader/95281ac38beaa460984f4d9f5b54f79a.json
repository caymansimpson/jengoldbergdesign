{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Projects.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './Home';\nimport '../App';\nimport './Projects.css'; //import { render } from \"react-dom\";\n\nimport { Link, Router } from \"react-router-dom\"; // Passing down the changePage function so we can activate it when a click on a span happens\n\nclass NavSelector extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"smallHeaderColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.emphasis,\n      onClick: e => this.props.changePage(this.props.text, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.text)));\n  }\n\n} //\n\n\nclass Navbar extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"smallHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.props.headerOrder.map(function (u, i) {\n      return React.createElement(NavSelector, {\n        text: u,\n        key: i,\n        changePage: this.props.changePage,\n        emphasis: i === 1 ? \"emphasis\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n}\n\nclass ProjectHeader extends React.Component {\n  // this.props.clicked will be null if nothing has been chosen and two things can be chosen\n  // itll either be uxr or design if we either chose something or if we have one option\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.project.description)), React.createElement(\"div\", {\n      className: \"projectTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.project.title)), React.createElement(\"div\", {\n      className: \"projectSelections \" + (this.props.clicked !== null ? 'clicked' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.props.project.uxr !== undefined && React.createElement(\"div\", {\n      className: \"projectOption\",\n      val: \"uxr\",\n      onClick: e => this.props.handleClick(e, \"uxr\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"User Research\"), this.props.project.design !== undefined && React.createElement(\"div\", {\n      className: \"projectOption\",\n      val: \"design\",\n      onClick: e => this.props.handleClick(e, \"design\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Design\")));\n  }\n\n}\n\nclass Section extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sectionTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.props.sectionTitle)), React.createElement(\"div\", {\n      className: \"sectionDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, this.props.sectionDescription)));\n  }\n\n} // Main class of this Page that handles NavBar, ProjectHeader and ProjectContent\n// Receives from props: ID of project, state of App (UXR, Graphic Design) and project to display\n// Along with HeaderOrder to display on top\n\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props); // Define what sttae we should be beginning the Project in\n\n    let clicked;\n    if (props.project.uxr !== undefined && props.project.design !== undefined) clicked = null; // if we have both\n    else clicked = props.project.uxr !== undefined ? 'uxr' : 'design'; // if we only have one\n\n    this.state = {\n      'clicked': clicked\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e, val) {\n    this.setState({\n      'clicked': val\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      changePage: this.props.changePage,\n      headerOrder: this.props.headerOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(ProjectHeader, {\n      clicked: this.state.clicked,\n      project: this.props.project,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), this.state.clicked !== null && // only display something if something was clicked, and choose which to display\n    (this.state.clicked === 'uxr' ? this.props.project.uxr : this.props.project.design).map(function (u, i) {\n      return React.createElement(Section, {\n        sectionTitle: u.name,\n        sectionDescription: u.description,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Projects.js"],"names":["React","Link","Router","NavSelector","Component","render","props","emphasis","e","changePage","text","Navbar","headerOrder","map","u","i","ProjectHeader","project","description","title","clicked","uxr","undefined","handleClick","design","Section","sectionTitle","sectionDescription","Projects","constructor","state","bind","val","setState","name"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './Home';\nimport '../App';\nimport './Projects.css';\n//import { render } from \"react-dom\";\nimport { Link, Router } from \"react-router-dom\"\n\n// Passing down the changePage function so we can activate it when a click on a span happens\nclass NavSelector extends React.Component {\n  render() {\n    return (\n      <div className=\"smallHeaderColumn\">\n        <Link to=\"/\">\n          <span className={this.props.emphasis} onClick={(e) => this.props.changePage(this.props.text, e)}>\n            {this.props.text}\n          </span>\n        </Link>\n      </div>\n    );\n  }\n}\n\n//\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <div className='smallHeader'>\n        { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n          this.props.headerOrder.map(function(u, i) {\n            return <NavSelector text={u} key={i} changePage={this.props.changePage} emphasis={i===1? \"emphasis\": \"\"}/>\n          }, this)\n        }\n      </div>\n    );\n  }\n}\n\nclass ProjectHeader extends React.Component {\n  // this.props.clicked will be null if nothing has been chosen and two things can be chosen\n  // itll either be uxr or design if we either chose something or if we have one option\n  render() {\n    return (\n      <div className='projectHeader'>\n        <div className='projectDescription'>\n          <p>{this.props.project.description}</p>\n        </div>\n        <div className=\"projectTitle\">\n          <p>{this.props.project.title}</p>\n        </div>\n\n        <div className={\"projectSelections \" + (this.props.clicked !== null? 'clicked': '')}>\n          {this.props.project.uxr !== undefined && <div className=\"projectOption\" val=\"uxr\" onClick={(e) => this.props.handleClick(e, \"uxr\")}>User Research</div>}\n          {this.props.project.design !== undefined && <div className=\"projectOption\" val=\"design\" onClick={(e) => this.props.handleClick(e, \"design\")}>Design</div>}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Section extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className='sectionTitle'>\n          <h2>{this.props.sectionTitle}</h2>\n        </div>\n        <div className='sectionDescription'>\n          <p>{this.props.sectionDescription}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Main class of this Page that handles NavBar, ProjectHeader and ProjectContent\n// Receives from props: ID of project, state of App (UXR, Graphic Design) and project to display\n// Along with HeaderOrder to display on top\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Define what sttae we should be beginning the Project in\n    let clicked;\n    if(props.project.uxr !== undefined && props.project.design !== undefined) clicked = null; // if we have both\n    else clicked = (props.project.uxr !== undefined)? 'uxr': 'design' // if we only have one\n\n    this.state = {'clicked': clicked}\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e, val) {\n    this.setState({'clicked': val})\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar changePage={this.props.changePage} headerOrder={this.props.headerOrder}/>\n        <ProjectHeader\n          clicked={this.state.clicked} project={this.props.project} handleClick={this.handleClick}\n        />\n        {/* <h1>Projects baby!</h1>\n        <p>ID of project: {this.props.id}</p>\n        <p>State of App: {this.props.selected}</p>\n        <p>Clicked: {this.state.clicked !== null? \"clicked\" : \"not clicked\"}</p> */}\n\n        {this.state.clicked !== null && // only display something if something was clicked, and choose which to display\n          (this.state.clicked === 'uxr'? this.props.project.uxr : this.props.project.design).map(function(u, i) {\n            return <Section sectionTitle={u.name} sectionDescription={u.description} key={i}/>\n          }, this)\n        }\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}