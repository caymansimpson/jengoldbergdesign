{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/App.js\";\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport React, { Component } from 'react';\nimport './App.css';\nimport Home from './views/Home.js';\nimport Projects from './views/Projects.js';\nimport { BrowserRouter, Route } from 'react-router-dom'; // This basically just tells the App which javascript files to go to based on different URLs\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'selected': 'UXR'\n    };\n    this.changePage = this.changePage.bind(this);\n    this.headerOrder = [\"Graphic Design\", \"UXR\", \"Me\"]; // This is default\n\n    this.shift = null;\n  } // Function called when someone clicks on the text in a PageSelector; must change headerOrder\n  // before we change state so that when component renders because of statechange, headerOrder is already set\n\n\n  changePage(selection, e) {\n    // Figure out which direction we should shift the array and shift it before we change the state\n    console.log(\"this is the state:\", this.state.selected);\n\n    if (this.headerOrder.indexOf(selection) === 0) {\n      this.headerOrder.unshift(this.headerOrder.pop());\n      console.log(\"shift right\");\n    } else if (this.headerOrder.indexOf(selection) === 2) {\n      this.headerOrder.push(this.headerOrder.shift());\n      console.log(\"shift left\");\n    } else {\n      console.log(\"rendering w/ no shift\");\n    }\n\n    this.setState({\n      'selected': selection\n    }, function () {\n      console.log(\"changed state to\", this.state.selected);\n    });\n  }\n\n  render() {\n    return React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => React.createElement(Home, {\n        projects: this.props.projects,\n        changePage: this.changePage,\n        selected: this.state.selected,\n        headerOrder: this.headerOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/projects/:id\",\n      render: props => React.createElement(Projects, {\n        project: this.props.projects[this.props.projects.map(function (u) {\n          return u.title.replace(/\\s/g, '');\n        }).indexOf(props.match.params.id)],\n        id: props.match.params.id,\n        selected: this.state.selected,\n        changePage: this.changePage,\n        headerOrder: this.headerOrder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/App.js"],"names":["React","Component","Home","Projects","BrowserRouter","Route","App","constructor","props","state","changePage","bind","headerOrder","shift","selection","e","console","log","selected","indexOf","unshift","pop","push","setState","render","projects","map","u","title","replace","match","params","id"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,SAAQC,aAAR,EAAuBC,KAAvB,QAAmC,kBAAnC,C,CAEA;;AACA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAC,kBAAY;AAAb,KAAb;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,WAAL,GAAmB,CAAC,gBAAD,EAAmB,KAAnB,EAA0B,IAA1B,CAAnB,CAJiB,CAImC;;AACpD,SAAKC,KAAL,GAAa,IAAb;AACD,GAPyB,CAS1B;AACA;;;AACAH,EAAAA,UAAU,CAACI,SAAD,EAAYC,CAAZ,EAAe;AAEvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkC,KAAKR,KAAL,CAAWS,QAA7C;;AACA,QAAG,KAAKN,WAAL,CAAiBO,OAAjB,CAAyBL,SAAzB,MAAwC,CAA3C,EAA8C;AAC5C,WAAKF,WAAL,CAAiBQ,OAAjB,CAAyB,KAAKR,WAAL,CAAiBS,GAAjB,EAAzB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KAHD,MAIK,IAAG,KAAKL,WAAL,CAAiBO,OAAjB,CAAyBL,SAAzB,MAAwC,CAA3C,EAA8C;AACjD,WAAKF,WAAL,CAAiBU,IAAjB,CAAsB,KAAKV,WAAL,CAAiBC,KAAjB,EAAtB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAHI,MAGE;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AAED,SAAKM,QAAL,CAAc;AACZ,kBAAYT;AADA,KAAd,EAEG,YAAW;AACZE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgC,KAAKR,KAAL,CAAWS,QAA3C;AAAqD,KAHvD;AAKD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,IAAd;AAAoB,MAAA,IAAI,EAAC,GAAzB;AAA6B,MAAA,MAAM,EAAE,MACnC,oBAAC,IAAD;AACE,QAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWiB,QADvB;AAEE,QAAA,UAAU,EAAE,KAAKf,UAFnB;AAGE,QAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWS,QAHvB;AAIE,QAAA,WAAW,EAAE,KAAKN,WAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,IAAd;AAAoB,MAAA,IAAI,EAAC,eAAzB;AAAyC,MAAA,MAAM,EAAGJ,KAAD,IAC/C,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE,KAAKA,KAAL,CAAWiB,QAAX,CAAoB,KAAKjB,KAAL,CAAWiB,QAAX,CAAoBC,GAApB,CAAwB,UAASC,CAAT,EAAY;AAC/D,iBAAOA,CAAC,CAACC,KAAF,CAAQC,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAP;AACD,SAF4B,EAE1BV,OAF0B,CAElBX,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBC,EAFD,CAApB,CADX;AAIE,QAAA,EAAE,EAAExB,KAAK,CAACsB,KAAN,CAAYC,MAAZ,CAAmBC,EAJzB;AAKE,QAAA,QAAQ,EAAE,KAAKvB,KAAL,CAAWS,QALvB;AAME,QAAA,UAAU,EAAE,KAAKR,UANnB;AAOE,QAAA,WAAW,EAAE,KAAKE,WAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF,CADF;AAyBD;;AA3DyB;;AA6D5B,eAAeN,GAAf","sourcesContent":["// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport React, { Component } from 'react';\nimport './App.css';\nimport Home from './views/Home.js';\nimport Projects from './views/Projects.js';\nimport {BrowserRouter, Route} from 'react-router-dom';\n\n// This basically just tells the App which javascript files to go to based on different URLs\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {'selected': 'UXR'};\n    this.changePage = this.changePage.bind(this);\n    this.headerOrder = [\"Graphic Design\", \"UXR\", \"Me\"]; // This is default\n    this.shift = null;\n  }\n\n  // Function called when someone clicks on the text in a PageSelector; must change headerOrder\n  // before we change state so that when component renders because of statechange, headerOrder is already set\n  changePage(selection, e) {\n\n    // Figure out which direction we should shift the array and shift it before we change the state\n    console.log(\"this is the state:\", this.state.selected)\n    if(this.headerOrder.indexOf(selection) === 0) {\n      this.headerOrder.unshift(this.headerOrder.pop())\n      console.log(\"shift right\")\n    }\n    else if(this.headerOrder.indexOf(selection) === 2) {\n      this.headerOrder.push(this.headerOrder.shift())\n      console.log(\"shift left\")\n    } else {\n      console.log(\"rendering w/ no shift\")\n    }\n\n    this.setState({\n      'selected': selection\n    }, function() {\n      console.log(\"changed state to\", this.state.selected)}\n    )\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div>\n          <Route exact={true} path='/' render={() => (\n            <Home\n              projects={this.props.projects}\n              changePage={this.changePage}\n              selected={this.state.selected}\n              headerOrder={this.headerOrder}\n            />\n          )}/>\n          <Route exact={true} path='/projects/:id' render={(props) => (\n            <Projects\n              project={this.props.projects[this.props.projects.map(function(u) {\n                return u.title.replace(/\\s/g, '')\n              }).indexOf(props.match.params.id)]}\n              id={props.match.params.id}\n              selected={this.state.selected}\n              changePage={this.changePage}\n              headerOrder={this.headerOrder}\n            />\n          )}/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}