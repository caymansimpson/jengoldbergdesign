{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/components/App.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './App.css';\n\nclass PageSelector extends React.Component {\n  constructor(props) {\n    super(props);\n  } // boilerplate code\n  // Passing down the changePage function so we can activate it when a click on a span happens\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: e => this.props.changePage(this.props.text, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, this.props.text));\n  }\n\n}\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props);\n  } // boilerplate code\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"project\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.description)));\n  }\n\n} // Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\n\n\nclass ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n  } // boilerplate code\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.props.projects.filter(function (u, i) {\n      // filter to only projects we need to show based on selection\n      console.log(this.props.selection);\n      console.log(this);\n      console.log(u);\n      if (this.props.selection == 'UXR') return u.uxr !== undefined;else return u.design !== undefined;\n    }, this).map( // then iterate them through\n    function (project, i) {\n      return React.createElement(Project, {\n        title: project.title + \" \" + i,\n        description: project.description,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    })) // {this.props.projects.map(function(u, i) {\n    //   //console.log(u, i);\n    //   <p>a</p>\n    //   //<Project data={u}/>\n    // })}\n    //</div>\n    ;\n  }\n\n} // Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'selected': 'UXR'\n    };\n    this.headerOrder = [\"Graphic Design\", \"UXR\", \"Me\"]; // This is default\n\n    this.changePage = this.changePage.bind(this);\n  } // boilerplate code\n  // Function called when someone clicks on the text in a PageSelector\n\n\n  changePage(selection, e) {\n    console.log(\"changed state to\", selection);\n    this.setState({\n      'selected': selection\n    });\n  }\n\n  render() {\n    const selected = this.state.selected; // Figure out which direction we should shift the array and shift it\n\n    if (this.headerOrder.indexOf(selected) == 0) {\n      this.headerOrder.unshift(this.headerOrder.pop());\n      console.log(\"shift right\");\n    } else if (this.headerOrder.indexOf(selected) == 2) {\n      this.headerOrder.push(this.headerOrder.shift());\n      console.log(\"shift left\");\n    } else {\n      console.log(\"rendering w/ no shift\");\n    }\n\n    let content;\n    console.log(selected);\n    if (selected != \"Me\") content = React.createElement(ProjectList, {\n      projects: this.props.projects,\n      selection: selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    });else content = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Will develop soon!\");\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mainheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Jen Goldberg\"), React.createElement(\"div\", {\n      className: \"pageselections\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.headerOrder.map(function (u, i) {\n      return React.createElement(PageSelector, {\n        text: u,\n        key: i,\n        changePage: this.changePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      });\n    }, this))), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sidenav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"\\\" \\\"\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, content)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/components/App.js"],"names":["React","PageSelector","Component","constructor","props","render","e","changePage","text","Project","title","description","ProjectList","projects","filter","u","i","console","log","selection","uxr","undefined","design","map","project","App","state","headerOrder","bind","setState","selected","indexOf","unshift","pop","push","shift","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,WAAP;;AAEA,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAC,UAAMA,KAAN;AAAa,GADQ,CACN;AAEnC;;;AACAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAGC,CAAD,IAAO,KAAKF,KAAL,CAAWG,UAAX,CAAsB,KAAKH,KAAL,CAAWI,IAAjC,EAAuCF,CAAvC,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkE,KAAKF,KAAL,CAAWI,IAA7E,CADF,CADF;AAKD;;AAVwC;;AAa3C,MAAMC,OAAN,SAAsBT,KAAK,CAACE,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD,GAHmC,CAGjC;;;AAEHC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKD,KAAL,CAAWM,KAAf,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,KAAL,CAAWO,WAAhB,CAFF,CADF,CADF;AAQD;;AAdmC,C,CAiBtC;AACA;;;AACA,MAAMC,WAAN,SAA0BZ,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAC,UAAMA,KAAN;AAAa,GADO,CACL;;;AAEnCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,KAAL,CAAWS,QAAX,CAAoBC,MAApB,CAA2B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AAAE;AAC3CC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWe,SAAvB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACA,UAAG,KAAKX,KAAL,CAAWe,SAAX,IAAwB,KAA3B,EAAkC,OAAOJ,CAAC,CAACK,GAAF,KAAUC,SAAjB,CAAlC,KACK,OAAON,CAAC,CAACO,MAAF,KAAaD,SAApB;AACN,KANA,EAME,IANF,EAMQE,GANR,EAMa;AACZ,cAASC,OAAT,EAAkBR,CAAlB,EAAqB;AACnB,aAAO,oBAAC,OAAD;AAAS,QAAA,KAAK,EAAEQ,OAAO,CAACd,KAAR,GAAgB,GAAhB,GAAsBM,CAAtC;AAAyC,QAAA,WAAW,EAAEQ,OAAO,CAACb,WAA9D;AAA2E,QAAA,GAAG,EAAEK,CAAhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KATF,CADH,CADF,CAcI;AACA;AACA;AACA;AACA;AACF;AAnBF;AAqBD;;AAzBuC,C,CA6B1C;;;AACA,MAAMS,GAAN,SAAkBzB,KAAK,CAACE,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKsB,KAAL,GAAa;AAAC,kBAAY;AAAb,KAAb;AACA,SAAKC,WAAL,GAAmB,CAAC,gBAAD,EAAmB,KAAnB,EAA0B,IAA1B,CAAnB,CAHiB,CAGkC;;AACnD,SAAKpB,UAAL,GAAkB,KAAKA,UAAL,CAAgBqB,IAAhB,CAAqB,IAArB,CAAlB;AACD,GAN+B,CAM7B;AAEH;;;AACArB,EAAAA,UAAU,CAACY,SAAD,EAAYb,CAAZ,EAAe;AACvBW,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCC,SAAhC;AACA,SAAKU,QAAL,CAAc;AACZ,kBAAYV;AADA,KAAd;AAGD;;AAEDd,EAAAA,MAAM,GAAG;AACP,UAAMyB,QAAQ,GAAG,KAAKJ,KAAL,CAAWI,QAA5B,CADO,CAGP;;AACA,QAAG,KAAKH,WAAL,CAAiBI,OAAjB,CAAyBD,QAAzB,KAAsC,CAAzC,EAA4C;AAC1C,WAAKH,WAAL,CAAiBK,OAAjB,CAAyB,KAAKL,WAAL,CAAiBM,GAAjB,EAAzB;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,KAHD,MAIK,IAAG,KAAKS,WAAL,CAAiBI,OAAjB,CAAyBD,QAAzB,KAAsC,CAAzC,EAA4C;AAC/C,WAAKH,WAAL,CAAiBO,IAAjB,CAAsB,KAAKP,WAAL,CAAiBQ,KAAjB,EAAtB;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,KAHI,MAGE;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD;;AAED,QAAIkB,OAAJ;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAYY,QAAZ;AACA,QAAGA,QAAQ,IAAI,IAAf,EAAqBM,OAAO,GAAG,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKhC,KAAL,CAAWS,QAAlC;AAA4C,MAAA,SAAS,EAAEiB,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV,CAArB,KACKM,OAAO,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAV;AAEL,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,SAAKT,WAAL,CAAiBJ,GAAjB,CAAqB,UAASR,CAAT,EAAYC,CAAZ,EAAe;AAClC,aAAO,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAED,CAApB;AAAuB,QAAA,GAAG,EAAEC,CAA5B;AAA+B,QAAA,UAAU,EAAE,KAAKT,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,EAEG,IAFH,CAFJ,CAFF,CADF,EAYE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG6B,OADH,CAFF,CAZF,CADF;AAqBD;;AAzD+B;;AA4DlC,eAAeX,GAAf","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './App.css';\n\nclass PageSelector extends React.Component {\n  constructor(props) {super(props)}  // boilerplate code\n\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return (\n      <div className=\"column\">\n        <span onClick={(e) => this.props.changePage(this.props.text, e)}>{this.props.text}</span>\n      </div>\n    );\n  }\n}\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props);\n  }  // boilerplate code\n\n  render() {\n    return (\n      <div className=\"projectcontainer\">\n        <div className=\"project\">\n          <p>{this.props.title}</p>\n          <h2>{this.props.description}</h2>\n        </div>\n      </div>\n    )\n  }\n}\n\n// Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\nclass ProjectList extends React.Component {\n  constructor(props) {super(props)}  // boilerplate code\n\n  render() {\n    return (\n      <div className=\"projectlist\">\n        {this.props.projects.filter(function(u, i) { // filter to only projects we need to show based on selection\n          console.log(this.props.selection)\n          console.log(this)\n          console.log(u)\n          if(this.props.selection == 'UXR') return u.uxr !== undefined\n          else return u.design !== undefined\n        }, this).map( // then iterate them through\n          function(project, i) {\n            return <Project title={project.title + \" \" + i} description={project.description} key={i}/>\n          }\n        )}\n      </div>\n        // {this.props.projects.map(function(u, i) {\n        //   //console.log(u, i);\n        //   <p>a</p>\n        //   //<Project data={u}/>\n        // })}\n      //</div>\n    );\n  }\n}\n\n\n// Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {'selected': 'UXR'};\n    this.headerOrder = [\"Graphic Design\", \"UXR\", \"Me\"] // This is default\n    this.changePage = this.changePage.bind(this);\n  }  // boilerplate code\n\n  // Function called when someone clicks on the text in a PageSelector\n  changePage(selection, e) {\n    console.log(\"changed state to\", selection)\n    this.setState({\n      'selected': selection\n    })\n  }\n\n  render() {\n    const selected = this.state.selected;\n\n    // Figure out which direction we should shift the array and shift it\n    if(this.headerOrder.indexOf(selected) == 0) {\n      this.headerOrder.unshift(this.headerOrder.pop())\n      console.log(\"shift right\")\n    }\n    else if(this.headerOrder.indexOf(selected) == 2) {\n      this.headerOrder.push(this.headerOrder.shift())\n      console.log(\"shift left\")\n    } else {\n      console.log(\"rendering w/ no shift\")\n    }\n\n    let content;\n    console.log(selected)\n    if(selected != \"Me\") content = <ProjectList projects={this.props.projects} selection={selected}/>\n    else content = <p>Will develop soon!</p>\n\n    return (\n      <div className=\"App\">\n        <div className=\"mainheader\">\n          <h1>Jen Goldberg</h1>\n          <div className=\"pageselections\">\n            { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n              this.headerOrder.map(function(u, i) {\n                return <PageSelector text={u} key={i} changePage={this.changePage}/>\n              }, this)\n            }\n          </div>\n        </div>\n\n        <div className=\"main\">\n          <div className=\"sidenav\">\" \"</div>\n          <div className=\"content\">\n            {content}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}