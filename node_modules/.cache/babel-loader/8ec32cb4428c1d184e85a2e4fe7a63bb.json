{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Projects.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './Home';\nimport '../App';\nimport './Projects.css'; //import { render } from \"react-dom\";\n\nimport { Link, Router } from \"react-router-dom\"; // Passing down the changePage function so we can activate it when a click on a span happens\n\nclass NavSelector extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"smallHeaderColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.emphasis,\n      onClick: e => this.props.changePage(this.props.text, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.text)));\n  }\n\n} //\n\n\nclass Navbar extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"smallHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.props.headerOrder.map(function (u, i) {\n      return React.createElement(NavSelector, {\n        text: u,\n        key: i,\n        changePage: this.props.changePage,\n        emphasis: i === 1 ? \"emphasis\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n}\n\nclass ProjectHeader extends React.Component {\n  // this.props.clicked will be null if nothing has been chosen and two things can be chosen\n  // itll either be uxr or design if we either chose something or if we have one option\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.project.description)), React.createElement(\"div\", {\n      className: \"projectTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.props.project.title)), this.props.project.uxr !== undefined && this.props.project.design !== undefined && // only show choice if there is any\n    React.createElement(\"div\", {\n      className: \"projectSelections \" + (this.props.clicked !== null ? 'clicked' : ''),\n      val: \"uxr\",\n      onClick: e => this.props.handleClick(e, \"uxr\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.props.project.uxr !== undefined && React.createElement(\"div\", {\n      className: \"projectOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"User Research\")), this.props.project.uxr !== undefined && this.props.project.design !== undefined && // only show choice if there is any\n    React.createElement(\"div\", {\n      className: \"projectSelections \" + (this.props.clicked !== null ? 'clicked' : ''),\n      val: \"design\",\n      onClick: e => this.props.handleClick(e, \"design\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.project.design !== undefined && React.createElement(\"div\", {\n      className: \"projectOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Design\")));\n  }\n\n}\n\nclass TextSection extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sectionTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.project.name)), React.createElement(\"div\", {\n      className: \"sectionDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.props.project.description)));\n  }\n\n}\n\nclass ColumnSection extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columnSectionTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.props.project.name)), React.createElement(\"div\", {\n      className: \"columnHolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.project.columns.map(function (u, i) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columnTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, u.name), React.createElement(\"div\", {\n        className: \"columnText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, u.description));\n    })));\n  }\n\n}\n\nclass QuoteSection extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quoteSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"quoteText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, this.props.project.description)));\n  }\n\n} // Main class of this Page that handles NavBar, ProjectHeader and ProjectContent\n// Receives from props: ID of project, state of App (UXR, Graphic Design) and project to display\n// Along with HeaderOrder to display on top\n\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props); // Define what state we should be beginning the Project in\n\n    let clicked; // TODO: clean up state because no longer need state for one-off projects\n\n    if (props.project.uxr !== undefined && props.project.design !== undefined) clicked = null; // if we have both\n    else clicked = props.project.uxr !== undefined ? 'uxr' : 'design'; // if we only have one\n\n    this.state = {\n      'clicked': clicked\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e, val) {\n    this.setState({\n      'clicked': val\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      changePage: this.props.changePage,\n      headerOrder: this.props.headerOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(ProjectHeader, {\n      clicked: this.state.clicked,\n      project: this.props.project,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"projectdescriptionholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, this.state.clicked !== null && // only display something if something was clicked, and choose which to display\n    (this.state.clicked === 'uxr' ? this.props.project.uxr : this.props.project.design).map(function (u, i) {\n      if (u.type === \"text\") return React.createElement(TextSection, {\n        project: u,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      });else if (u.type === \"column\") return React.createElement(ColumnSection, {\n        project: u,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });else if (u.type === \"quote\") return React.createElement(QuoteSection, {\n        project: u,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      });\n    }, this)));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Projects.js"],"names":["React","Link","Router","NavSelector","Component","render","props","emphasis","e","changePage","text","Navbar","headerOrder","map","u","i","ProjectHeader","project","description","title","uxr","undefined","design","clicked","handleClick","TextSection","name","ColumnSection","columns","QuoteSection","Projects","constructor","state","bind","val","setState","type"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './Home';\nimport '../App';\nimport './Projects.css';\n//import { render } from \"react-dom\";\nimport { Link, Router } from \"react-router-dom\"\n\n// Passing down the changePage function so we can activate it when a click on a span happens\nclass NavSelector extends React.Component {\n  render() {\n    return (\n      <div className=\"smallHeaderColumn\">\n        <Link to=\"/\">\n          <span className={this.props.emphasis} onClick={(e) => this.props.changePage(this.props.text, e)}>\n            {this.props.text}\n          </span>\n        </Link>\n      </div>\n    );\n  }\n}\n\n//\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <div className='smallHeader'>\n        { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n          this.props.headerOrder.map(function(u, i) {\n            return <NavSelector text={u} key={i} changePage={this.props.changePage} emphasis={i===1? \"emphasis\": \"\"}/>\n          }, this)\n        }\n      </div>\n    );\n  }\n}\n\nclass ProjectHeader extends React.Component {\n  // this.props.clicked will be null if nothing has been chosen and two things can be chosen\n  // itll either be uxr or design if we either chose something or if we have one option\n  render() {\n    return (\n      <div className='projectHeader'>\n        <div className='projectDescription'>\n          <p>{this.props.project.description}</p>\n        </div>\n        <div className=\"projectTitle\">\n          <p>{this.props.project.title}</p>\n        </div>\n\n        {this.props.project.uxr !== undefined && this.props.project.design !== undefined && // only show choice if there is any\n          <div className={\"projectSelections \" + (this.props.clicked !== null? 'clicked': '')} val=\"uxr\" onClick={(e) => this.props.handleClick(e, \"uxr\")}>\n            {this.props.project.uxr !== undefined && <div className=\"projectOption\" >User Research</div>}\n          </div>\n        }\n        {this.props.project.uxr !== undefined && this.props.project.design !== undefined && // only show choice if there is any\n          <div className={\"projectSelections \" + (this.props.clicked !== null? 'clicked': '')} val=\"design\" onClick={(e) => this.props.handleClick(e, \"design\")}>\n            {this.props.project.design !== undefined && <div className=\"projectOption\">Design</div>}\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nclass TextSection extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className='sectionTitle'>\n          <h2>{this.props.project.name}</h2>\n        </div>\n        <div className='sectionDescription'>\n          <p>{this.props.project.description}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass ColumnSection extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className='columnSectionTitle'>\n          <h2>{this.props.project.name}</h2>\n        </div>\n        <div className='columnHolder'>\n          {\n            this.props.project.columns.map(function(u, i) {\n              return (\n                <div>\n                  <div className='columnTitle'>\n                    {u.name}\n                  </div>\n                  <div className='columnText'>\n                    {u.description}\n                  </div>\n              </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nclass QuoteSection extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className='quoteSection'>\n          <h2 className='quoteText'>{this.props.project.description}</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Main class of this Page that handles NavBar, ProjectHeader and ProjectContent\n// Receives from props: ID of project, state of App (UXR, Graphic Design) and project to display\n// Along with HeaderOrder to display on top\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Define what state we should be beginning the Project in\n    let clicked; // TODO: clean up state because no longer need state for one-off projects\n    if(props.project.uxr !== undefined && props.project.design !== undefined) clicked = null; // if we have both\n    else clicked = (props.project.uxr !== undefined)? 'uxr': 'design' // if we only have one\n\n    this.state = {'clicked': clicked}\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e, val) {\n    this.setState({'clicked': val})\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar changePage={this.props.changePage} headerOrder={this.props.headerOrder}/>\n        <ProjectHeader\n          clicked={this.state.clicked} project={this.props.project} handleClick={this.handleClick}\n        />\n        {/* <h1>Projects baby!</h1>\n        <p>ID of project: {this.props.id}</p>\n        <p>State of App: {this.props.selected}</p>\n        <p>Clicked: {this.state.clicked !== null? \"clicked\" : \"not clicked\"}</p> */}\n        <div className='projectdescriptionholder'>\n          {this.state.clicked !== null && // only display something if something was clicked, and choose which to display\n            (this.state.clicked === 'uxr'? this.props.project.uxr : this.props.project.design).map(function(u, i) {\n              if(u.type === \"text\") return <TextSection project={u} key={i}/>\n              else if (u.type === \"column\") return <ColumnSection project={u} key={i}/>\n              else if (u.type === \"quote\") return <QuoteSection project={u} key={i}/>\n            }, this)\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}