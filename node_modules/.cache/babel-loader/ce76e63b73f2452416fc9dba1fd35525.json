{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Home.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './Home.css';\nimport '../App';\nimport './Home'; //import { render } from \"react-dom\";\n\nimport { Link, Router } from \"react-router-dom\";\nimport { Transition } from 'react-transition-group'; // import ReactCSSTransitionGroup from 'react-addons-css-transition-group'; // ES6\n// var ReactCSSTransitionGroup = require('react-addons-css-transition-group'); // ES5 with npm\n\nclass PageSelector extends React.Component {\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return React.createElement(\"div\", {\n      className: \"column\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.emphasis,\n      onClick: e => this.props.changePage(this.props.text, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, this.props.text));\n  }\n\n}\n\nclass Project extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects/\" + this.props.title.replace(/\\s/g, ''),\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"project\",\n      id: this.props.title.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.title), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.props.description))));\n  }\n\n} // Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\n\n\nclass ProjectList extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, this.props.projects.filter(function (u, i) {\n      // filter to only projects we need to show based on selection\n      if (this.props.selection === 'UXR') return u.uxr !== undefined;else return u.design !== undefined;\n    }, this).map( // then iterate them through\n    function (project, i) {\n      return React.createElement(Project, {\n        title: project.title,\n        description: project.description,\n        key: i,\n        selection: this.props.selection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n}\n\nclass MePage extends React.Component {\n  render() {\n    return (// we must return one parent div; you cant return two childs for some rando reason\n      React.createElement(\"div\", {\n        className: \"mePage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Hayyyyy girl\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Hows it hanging?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"left or right... heh\"), React.createElement(\"div\", {\n        className: \"extradiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"this is an extra div\"))\n    );\n  }\n\n} // Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\n\n/* Receives the following props:\n- projects: json data of all projects\n- selected: the value that we should display\n- headerOrder: the order of the headers\n- shift: how we should shift upon entering\n*/\n\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  } // boilerplate code\n\n\n  render() {\n    const selected = this.props.selected;\n    let content;\n\n    if (selected !== \"Me\") {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidenav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Project 1\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Project 2\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Project 3\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Project 4\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Project 5\")), React.createElement(\"div\", {\n        className: \"projectcontent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(ProjectList, {\n        projects: this.props.projects,\n        selection: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })));\n    } else content = React.createElement(MePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }); // Added a link here\n\n\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mainheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Jen Goldberg\"), React.createElement(\"div\", {\n      className: \"pageselections\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.props.headerOrder.map(function (u, i) {\n      return React.createElement(PageSelector, {\n        text: u,\n        key: i,\n        changePage: this.props.changePage,\n        emphasis: i === 1 ? \"emphasis\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }, this))), React.createElement(Transition, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, content)));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Home.js"],"names":["React","Link","Router","Transition","PageSelector","Component","render","props","emphasis","e","changePage","text","Project","title","replace","description","ProjectList","projects","filter","u","i","selection","uxr","undefined","design","map","project","MePage","Home","constructor","selected","content","headerOrder"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './Home.css';\nimport '../App';\nimport './Home';\n//import { render } from \"react-dom\";\nimport { Link, Router } from \"react-router-dom\"\nimport { Transition } from 'react-transition-group';\n// import ReactCSSTransitionGroup from 'react-addons-css-transition-group'; // ES6\n// var ReactCSSTransitionGroup = require('react-addons-css-transition-group'); // ES5 with npm\n\n\nclass PageSelector extends React.Component {\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return (\n      <div className=\"column\">\n        <span className={this.props.emphasis} onClick={(e) => this.props.changePage(this.props.text, e)}>\n          {this.props.text}\n        </span>\n      </div>\n    );\n  }\n}\n\nclass Project extends React.Component {\n  render() {\n    return (\n        <div className=\"projectcontainer\">\n          <Link to={\"/projects/\" + this.props.title.replace(/\\s/g, '')} target=\"_blank\">\n            <div className=\"project\" id={this.props.title.replace(/\\s/g, '')}>\n              <p>{this.props.title}</p>\n              <h2>{this.props.description}</h2>\n            </div>\n          </Link>\n        </div>\n    )\n  }\n}\n\n// Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\nclass ProjectList extends React.Component {\n\n  render() {\n    return (\n      <div className=\"projectlist\">\n        {this.props.projects.filter(function(u, i) { // filter to only projects we need to show based on selection\n          if(this.props.selection === 'UXR') return u.uxr !== undefined\n          else return u.design !== undefined\n        }, this).map( // then iterate them through\n          function(project, i) {\n            return <Project title={project.title} description={project.description} key={i} selection={this.props.selection}/>\n          }, this\n        )}\n      </div>\n    );\n  }\n}\n\nclass MePage extends React.Component {\n\n  render() {\n    return ( // we must return one parent div; you cant return two childs for some rando reason\n      <div className=\"mePage\">\n          <h2>Hayyyyy girl</h2>\n          <h3>Hows it hanging?</h3>\n          <p>left or right... heh</p>\n          <div className=\"extradiv\">this is an extra div</div>\n      </div>\n    );\n  }\n}\n\n\n// Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\n/* Receives the following props:\n- projects: json data of all projects\n- selected: the value that we should display\n- headerOrder: the order of the headers\n- shift: how we should shift upon entering\n*/\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n  }  // boilerplate code\n\n  render() {\n    const selected = this.props.selected;\n\n    let content;\n    if(selected !== \"Me\") {\n      content = (\n        <div>\n          <div className=\"sidenav\"> {//TODO: testing\n          }\n            <div className=\"sidenavTester\">Project 1</div>\n            <div className=\"sidenavTester\">Project 2</div>\n            <div className=\"sidenavTester\">Project 3</div>\n            <div className=\"sidenavTester\">Project 4</div>\n            <div className=\"sidenavTester\">Project 5</div>\n          </div>\n          <div className=\"projectcontent\">\n            <ProjectList projects={this.props.projects} selection={selected}/>\n          </div>\n        </div>\n      )\n    }\n    else content = <MePage/>\n\n    // Added a link here\n    return (\n      <div className=\"home\">\n        <div className=\"mainheader\">\n          <h1>Jen Goldberg</h1>\n          <div className=\"pageselections\">\n            { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n              this.props.headerOrder.map(function(u, i) {\n                return <PageSelector text={u} key={i} changePage={this.props.changePage} emphasis={i===1? \"emphasis\": \"\"}/>\n              }, this)\n            }\n          </div>\n        </div>\n\n        {/* Syntax from http://reactcommunity.org/react-transition-group/transition */}\n        <Transition >\n          <div className=\"main\">\n            {content}\n          </div>\n        </Transition>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}