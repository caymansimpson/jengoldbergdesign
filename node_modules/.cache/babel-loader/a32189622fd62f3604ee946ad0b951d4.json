{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Projects.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './Home';\nimport '../App';\nimport './Projects.css'; //import { render } from \"react-dom\";\n\nimport { Link } from \"react-router-dom\"; // npm install html-react-parser --save\n\nimport parse from 'html-react-parser';\n\nvar images = require.context('../images', true); // Passing down the changePage function so we can activate it when a click on a span happens\n\n\nclass NavSelector extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"smallHeaderColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.emphasis,\n      onClick: e => this.props.changePage(this.props.text, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, this.props.text)));\n  }\n\n} //\n\n\nclass Navbar extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"smallHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.props.headerOrder.map(function (u, i) {\n      return React.createElement(NavSelector, {\n        text: u,\n        key: i,\n        changePage: this.props.changePage,\n        emphasis: i === 1 ? \"emphasis\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n}\n\nclass ProjectHeader extends React.Component {\n  // this.props.clicked will be null if nothing has been chosen and two things can be chosen\n  // itll either be uxr or design if we either chose something or if we have one option\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.project.description\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"projectTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.project.title\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), this.props.project.uxr !== undefined && this.props.project.design !== undefined && // only show this if we have multiple to choose from\n    React.createElement(\"div\", {\n      className: \"projectSelectionHolder \" + (this.props.clicked !== null ? 'clicked' : ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \" \", React.createElement(\"div\", {\n      className: \"projectSelections \" + (this.props.clicked !== null ? 'clicked' : ''),\n      val: \"uxr\",\n      onClick: e => this.props.handleClick(e, \"uxr\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.project.uxr !== undefined && React.createElement(\"div\", {\n      className: \"projectOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"User Research\")), React.createElement(\"div\", {\n      className: \"projectSelections \" + (this.props.clicked !== null ? 'clicked' : ''),\n      val: \"design\",\n      onClick: e => this.props.handleClick(e, \"design\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.project.design !== undefined && React.createElement(\"div\", {\n      className: \"projectOption\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Design\"))));\n  }\n\n}\n\nclass TextSection extends React.Component {\n  render() {\n    // console.log(this.props.project);\n    // let a = require('../images/example.jpeg');\n    let description = parse(this.props.project.description, {\n      replace: function (element) {\n        console.log(\"A\", element);\n\n        if (element.attribs && element.name === 'img') {\n          console.log(\"B\", element.attribs.src); //let a = require(\"../images/example.jpeg\")\n\n          console.log(element.attribs.src === \"../images/example.jpeg\");\n          let a = element.attribs.src;\n          let b = images(\"\".concat(a)); //return <img src={require(`${element.attribs.src}`)}/>\n\n          let c = \"../images/example.jpeg\";\n          return React.createElement(\"img\", {\n            src: b,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          });\n        }\n      }\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"sectionTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.project.name\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"sectionDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, description)));\n  }\n\n}\n\nclass ColumnSection extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"columnSectionTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.project.name\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"columnHolder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, this.props.project.columns.map(function (u, i) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"columnTitle\",\n        dangerouslySetInnerHTML: {\n          __html: u.name\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"columnText\",\n        dangerouslySetInnerHTML: {\n          __html: u.description\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    })));\n  }\n\n}\n\nclass QuoteSection extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"quoteSection\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"quoteText\",\n      dangerouslySetInnerHTML: {\n        __html: this.props.project.description\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })));\n  }\n\n} // Main class of this Page that handles NavBar, ProjectHeader and ProjectContent\n// Receives from props: ID of project, state of App (UXR, Graphic Design) and project to display\n// Along with HeaderOrder to display on top\n\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props); // Define what state we should be beginning the Project in\n\n    let clicked; // TODO: clean up state because no longer need state for one-off projects\n\n    if (props.project.uxr !== undefined && props.project.design !== undefined) clicked = null; // if we have both\n    else clicked = props.project.uxr !== undefined ? 'uxr' : 'design'; // if we only have one\n\n    this.state = {\n      'clicked': clicked\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n  } // Handles when a user clicks on a project that has both UXR and Design elements\n\n\n  handleClick(e, val) {\n    this.setState({\n      'clicked': val\n    });\n  } // add scroll event\n\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  } // Handles how to change the header height when a user scrolls TODO: get this to print\n\n\n  handleScroll(e) {// Can\n    // console.log(document.getElementsByClassName('projectDescription')[0].style)//.style.fontSize=(300 - window.pageYOffset) + \"%\";\n    // document.getElementsByClassName('projectDescription')[0].style.fontSize=(300 - window.pageYOffset) + \"%\";\n    // document.getElementsByClassName('projectDescription')[0].style.height=(300 - window.pageYOffset) + \"vh\";\n    //console.log(window.pageYOffset, 300 - window.pageYOffset)\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      changePage: this.props.changePage,\n      headerOrder: this.props.headerOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }), React.createElement(ProjectHeader, {\n      clicked: this.state.clicked,\n      project: this.props.project,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"projectdescriptionholder\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, this.state.clicked !== null && // only display something if something was clicked, and choose which to display\n    (this.state.clicked === 'uxr' ? this.props.project.uxr : this.props.project.design).map(function (u, i) {\n      if (u.type === \"text\") return React.createElement(TextSection, {\n        project: u,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      });else if (u.type === \"column\") return React.createElement(ColumnSection, {\n        project: u,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      });else if (u.type === \"quote\") return React.createElement(QuoteSection, {\n        project: u,\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      });\n      return null;\n    }, this)));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Projects.js"],"names":["React","Link","parse","images","require","context","NavSelector","Component","render","props","emphasis","e","changePage","text","Navbar","headerOrder","map","u","i","ProjectHeader","__html","project","description","title","uxr","undefined","design","clicked","handleClick","TextSection","replace","element","console","log","attribs","name","src","a","b","c","ColumnSection","columns","QuoteSection","Projects","constructor","state","bind","handleScroll","val","setState","componentDidMount","window","scrollTo","addEventListener","componentWillUnmount","removeEventListener","type"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './Home';\nimport '../App';\nimport './Projects.css';\n//import { render } from \"react-dom\";\nimport { Link } from \"react-router-dom\"\n\n\n// npm install html-react-parser --save\nimport parse from 'html-react-parser';\nvar images = require.context('../images', true);\n\n// Passing down the changePage function so we can activate it when a click on a span happens\nclass NavSelector extends React.Component {\n  render() {\n    return (\n      <div className=\"smallHeaderColumn\">\n        <Link to=\"/\">\n          <span className={this.props.emphasis} onClick={(e) => this.props.changePage(this.props.text, e)}>\n            {this.props.text}\n          </span>\n        </Link>\n      </div>\n    );\n  }\n}\n\n//\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <div className='smallHeader'>\n        { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n          this.props.headerOrder.map(function(u, i) {\n            return <NavSelector text={u} key={i} changePage={this.props.changePage} emphasis={i===1? \"emphasis\": \"\"}/>\n          }, this)\n        }\n      </div>\n    );\n  }\n}\n\nclass ProjectHeader extends React.Component {\n  // this.props.clicked will be null if nothing has been chosen and two things can be chosen\n  // itll either be uxr or design if we either chose something or if we have one option\n  render() {\n    return (\n      <div className='projectHeader'>\n        <div className='projectDescription'>\n          <p dangerouslySetInnerHTML={{ __html: this.props.project.description}}/>\n        </div>\n        <div className=\"projectTitle\">\n          <p dangerouslySetInnerHTML={{ __html: this.props.project.title}}/>\n        </div>\n        {this.props.project.uxr !== undefined && this.props.project.design !== undefined && // only show this if we have multiple to choose from\n          <div className={\"projectSelectionHolder \" + (this.props.clicked !== null? 'clicked': '')}> {/*temporary*/}\n              <div className={\"projectSelections \" + (this.props.clicked !== null? 'clicked': '')} val=\"uxr\" onClick={(e) => this.props.handleClick(e, \"uxr\")}>\n                {this.props.project.uxr !== undefined && <div className=\"projectOption\">User Research</div>}\n              </div>\n              <div className={\"projectSelections \" + (this.props.clicked !== null? 'clicked': '')} val=\"design\" onClick={(e) => this.props.handleClick(e, \"design\")}>\n                {this.props.project.design !== undefined && <div className=\"projectOption\">Design</div>}\n              </div>\n          </div>\n        }\n      </div>\n    );\n  }\n}\n\nclass TextSection extends React.Component {\n  render() {\n    // console.log(this.props.project);\n    // let a = require('../images/example.jpeg');\n    let description = parse(this.props.project.description, {\n        replace: function(element) {\n          console.log(\"A\", element)\n          if (element.attribs && element.name === 'img') {\n            console.log(\"B\", element.attribs.src)\n            //let a = require(\"../images/example.jpeg\")\n            console.log(element.attribs.src === \"../images/example.jpeg\")\n            let a = element.attribs.src\n            let b = images(`${a}`)\n            //return <img src={require(`${element.attribs.src}`)}/>\n            let c=\"../images/example.jpeg\"\n            return <img src={b}/>\n          }\n        }\n    });\n    return (\n      <div>\n        <div className='sectionTitle'>\n          <h2 dangerouslySetInnerHTML={{ __html: this.props.project.name}}/>\n        </div>\n        <div className='sectionDescription'>\n          {/* <p dangerouslySetInnerHTML={{ __html: this.props.project.description}}/> */}\n          <p>\n            {description}\n          </p>\n        </div>\n        {/* <img src={a}/> */}\n      </div>\n    );\n  }\n}\n\nclass ColumnSection extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className='columnSectionTitle'>\n          <h2 dangerouslySetInnerHTML={{ __html: this.props.project.name}}/>\n        </div>\n        <div className='columnHolder'>\n          {\n            this.props.project.columns.map(function(u, i) {\n              return (\n                <div>\n                  <div className='columnTitle' dangerouslySetInnerHTML={{ __html: u.name}}/>\n                  <div className='columnText' dangerouslySetInnerHTML={{ __html: u.description}}/>\n                </div>\n              )\n            })\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nclass QuoteSection extends React.Component {\n  render() {\n    return (\n      <div>\n        <div className='quoteSection'>\n          <h2 className='quoteText' dangerouslySetInnerHTML={{ __html: this.props.project.description}}/>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Main class of this Page that handles NavBar, ProjectHeader and ProjectContent\n// Receives from props: ID of project, state of App (UXR, Graphic Design) and project to display\n// Along with HeaderOrder to display on top\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Define what state we should be beginning the Project in\n    let clicked; // TODO: clean up state because no longer need state for one-off projects\n    if(props.project.uxr !== undefined && props.project.design !== undefined) clicked = null; // if we have both\n    else clicked = (props.project.uxr !== undefined)? 'uxr': 'design' // if we only have one\n\n    this.state = {'clicked': clicked}\n    this.handleClick = this.handleClick.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n  }\n\n  // Handles when a user clicks on a project that has both UXR and Design elements\n  handleClick(e, val) {\n    this.setState({'clicked': val})\n  }\n\n  // add scroll event\n  componentDidMount() {\n    window.scrollTo(0, 0)\n    window.addEventListener('scroll', this.handleScroll);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.handleScroll);\n  }\n\n  // Handles how to change the header height when a user scrolls TODO: get this to print\n  handleScroll(e) {\n    // Can\n    // console.log(document.getElementsByClassName('projectDescription')[0].style)//.style.fontSize=(300 - window.pageYOffset) + \"%\";\n    // document.getElementsByClassName('projectDescription')[0].style.fontSize=(300 - window.pageYOffset) + \"%\";\n    // document.getElementsByClassName('projectDescription')[0].style.height=(300 - window.pageYOffset) + \"vh\";\n    //console.log(window.pageYOffset, 300 - window.pageYOffset)\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar changePage={this.props.changePage} headerOrder={this.props.headerOrder}/>\n        <ProjectHeader\n          clicked={this.state.clicked} project={this.props.project} handleClick={this.handleClick}\n        />\n        <div className='projectdescriptionholder'>\n          {this.state.clicked !== null && // only display something if something was clicked, and choose which to display\n            (this.state.clicked === 'uxr'? this.props.project.uxr : this.props.project.design).map(function(u, i) {\n              if(u.type === \"text\") return <TextSection project={u} key={i}/>\n              else if (u.type === \"column\") return <ColumnSection project={u} key={i}/>\n              else if (u.type === \"quote\") return <QuoteSection project={u} key={i}/>\n              return null;\n            }, this)\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}