{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Projects.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './Home';\nimport '../App';\nimport './Projects.css'; //import { render } from \"react-dom\";\n\nimport { Link, Router } from \"react-router-dom\";\n\nclass NavSelector extends React.Component {\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return React.createElement(\"div\", {\n      className: \"smallHeaderColumn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.props.emphasis,\n      onClick: e => this.props.changePage(this.props.text, e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, this.props.text)));\n  }\n\n} //\n\n\nclass Navbar extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"smallHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.props.headerOrder.map(function (u, i) {\n      return React.createElement(NavSelector, {\n        text: u,\n        key: i,\n        changePage: this.props.changePage,\n        emphasis: i === 1 ? \"emphasis\" : \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n} // class ProjectOption extends React.Component {\n//   render() {\n//     <div className={\"projectOption \" + this.props.clicked} val=\"uxr\"/>{}</div>\n//   }\n// }\n\n\nclass ProjectHeader extends React.Component {\n  render() {\n    //TODO: add conditional rendering for when things have been clicked or not\n    // let uxrProjectOption =\n    // let designProjectOption =\n    let uxrProjectOptionClicked = React.createElement(\"div\", {\n      className: \"projectOption clicked\",\n      val: \"uxr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"User Research\");\n    let designProjectOptionClicked = React.createElement(\"div\", {\n      className: \"projectOption clicked\",\n      val: \"design\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Branding\");\n    return React.createElement(\"div\", {\n      className: \"projectHeader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectDescription\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.props.project.description)), React.createElement(\"div\", {\n      className: \"projectTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.props.project.title)), React.createElement(\"div\", {\n      className: \"projectSelections\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.clicked === null ? // if we have two options and user hasnt done anything\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectOption\",\n      val: \"uxr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"User Research\"), React.createElement(\"div\", {\n      className: \"projectOption\",\n      val: \"design\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Design\")) : // if\n    this.props.project.uxr === undefined || this.props.project.design === undefined ? //we don't have another option to show\n    React.createElement(\"div\", {\n      className: \"projectOption clicked\",\n      val: \"design\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \">(this.state === 'uxr')? User Research : Branding\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectOption clicked\",\n      val: \"uxr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"User Research\"), React.createElement(\"div\", {\n      className: \"projectOption clicked\",\n      val: \"design\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Branding\"))));\n  }\n\n} // Main class of this Page that handles NavBar, ProjectHeader and ProjectContent\n// Receives from props: ID of project, state of App (UXR, Graphic Design) and project to display\n// Along with HeaderOrder to display on top\n\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props); // Define what sttae we should be beginning the Project in\n\n    let clicked;\n    if (props.project.uxr !== undefined && props.project.design !== undefined) clicked = null; // if we have both\n    else clicked = props.project.uxr !== undefined ? 'uxr' : 'design'; // if we only have one\n\n    this.state = {\n      'clicked': clicked\n    };\n  } // boilerplate code\n  // TODO: pass event that knows when a section has been clicked\n\n\n  render() {\n    // Added a link here\n    console.log(this.props.project);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      changePage: this.props.changePage,\n      headerOrder: this.props.headerOrder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(ProjectHeader, {\n      clicked: this.state.clicked,\n      project: this.props.project,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Projects baby!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"ID of project: \", this.props.id), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"State of App: \", this.props.selected), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Clicked: \", this.state.clicked ? \"clicked\" : \"not clicked\"));\n  }\n\n}\n\nexport default Projects;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Projects.js"],"names":["React","Link","Router","NavSelector","Component","render","props","emphasis","e","changePage","text","Navbar","headerOrder","map","u","i","ProjectHeader","uxrProjectOptionClicked","designProjectOptionClicked","project","description","title","state","clicked","uxr","undefined","design","Projects","constructor","console","log","id","selected"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,QAAP;AACA,OAAO,QAAP;AACA,OAAO,gBAAP,C,CACA;;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,kBAA7B;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AACxC;AACAC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,QAA5B;AAAsC,MAAA,OAAO,EAAGC,CAAD,IAAO,KAAKF,KAAL,CAAWG,UAAX,CAAsB,KAAKH,KAAL,CAAWI,IAAjC,EAAuCF,CAAvC,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKF,KAAL,CAAWI,IADd,CADF,CADF,CADF;AASD;;AAZuC,C,CAe1C;;;AACA,MAAMC,MAAN,SAAqBX,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACA,SAAKC,KAAL,CAAWM,WAAX,CAAuBC,GAAvB,CAA2B,UAASC,CAAT,EAAYC,CAAZ,EAAe;AACxC,aAAO,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAED,CAAnB;AAAsB,QAAA,GAAG,EAAEC,CAA3B;AAA8B,QAAA,UAAU,EAAE,KAAKT,KAAL,CAAWG,UAArD;AAAiE,QAAA,QAAQ,EAAEM,CAAC,KAAG,CAAJ,GAAO,UAAP,GAAmB,EAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,EAEG,IAFH,CAFJ,CADF;AASD;;AAXkC,C,CAcrC;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,aAAN,SAA4BhB,KAAK,CAACI,SAAlC,CAA4C;AAC1CC,EAAAA,MAAM,GAAG;AAAE;AACT;AACA;AACA,QAAIY,uBAAuB,GAAG;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,GAAG,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA9B;AACA,QAAIC,0BAA0B,GAAG;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,GAAG,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjC;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKZ,KAAL,CAAWa,OAAX,CAAmBC,WAAvB,CADF,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKd,KAAL,CAAWa,OAAX,CAAmBE,KAAvB,CADF,CAJF,EAQE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,OAAX,KAAuB,IAAvB,GAA+B;AAC9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAA+B,MAAA,GAAG,EAAC,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADD,GAKK;AACJ,SAAKjB,KAAL,CAAWa,OAAX,CAAmBK,GAAnB,KAA2BC,SAA3B,IAAwC,KAAKnB,KAAL,CAAWa,OAAX,CAAmBO,MAAnB,KAA8BD,SAAtE,GAAmF;AACjF;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,GAAG,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADF,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,GAAG,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAuC,MAAA,GAAG,EAAC,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CAVN,CARF,CADF;AA4BD;;AAnCyC,C,CAsC5C;AACA;AACA;;;AACA,MAAME,QAAN,SAAuB3B,KAAK,CAACI,SAA7B,CAAuC;AACrCwB,EAAAA,WAAW,CAACtB,KAAD,EAAQ;AACjB,UAAMA,KAAN,EADiB,CAGjB;;AACA,QAAIiB,OAAJ;AACA,QAAGjB,KAAK,CAACa,OAAN,CAAcK,GAAd,KAAsBC,SAAtB,IAAmCnB,KAAK,CAACa,OAAN,CAAcO,MAAd,KAAyBD,SAA/D,EAA0EF,OAAO,GAAG,IAAV,CAA1E,CAA0F;AAA1F,SACKA,OAAO,GAAIjB,KAAK,CAACa,OAAN,CAAcK,GAAd,KAAsBC,SAAvB,GAAmC,KAAnC,GAA0C,QAApD,CANY,CAMiD;;AAElE,SAAKH,KAAL,GAAa;AACX,iBAAWC;AADA,KAAb;AAGD,GAZoC,CAYlC;AAEH;;;AACAlB,EAAAA,MAAM,GAAG;AACP;AAEAwB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWa,OAAvB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,UAAU,EAAE,KAAKb,KAAL,CAAWG,UAA/B;AAA2C,MAAA,WAAW,EAAE,KAAKH,KAAL,CAAWM,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAE,KAAKU,KAAL,CAAWC,OADtB;AAC+B,MAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWa,OADnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,KAAKb,KAAL,CAAWyB,EAA9B,CANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkB,KAAKzB,KAAL,CAAW0B,QAA7B,CAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAa,KAAKV,KAAL,CAAWC,OAAX,GAAoB,SAApB,GAAgC,aAA7C,CARF,CADF;AAYD;;AAhCoC;;AAmCvC,eAAeI,QAAf","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './Home';\nimport '../App';\nimport './Projects.css';\n//import { render } from \"react-dom\";\nimport { Link, Router } from \"react-router-dom\"\n\nclass NavSelector extends React.Component {\n  // Passing down the changePage function so we can activate it when a click on a span happens\n  render() {\n    return (\n      <div className=\"smallHeaderColumn\">\n        <Link to=\"/\">\n          <span className={this.props.emphasis} onClick={(e) => this.props.changePage(this.props.text, e)}>\n            {this.props.text}\n          </span>\n        </Link>\n      </div>\n    );\n  }\n}\n\n//\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <div className='smallHeader'>\n        { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n          this.props.headerOrder.map(function(u, i) {\n            return <NavSelector text={u} key={i} changePage={this.props.changePage} emphasis={i===1? \"emphasis\": \"\"}/>\n          }, this)\n        }\n      </div>\n    );\n  }\n}\n\n// class ProjectOption extends React.Component {\n//   render() {\n//     <div className={\"projectOption \" + this.props.clicked} val=\"uxr\"/>{}</div>\n//   }\n// }\n\nclass ProjectHeader extends React.Component {\n  render() { //TODO: add conditional rendering for when things have been clicked or not\n    // let uxrProjectOption =\n    // let designProjectOption =\n    let uxrProjectOptionClicked = <div className=\"projectOption clicked\" val=\"uxr\">User Research</div>\n    let designProjectOptionClicked = <div className=\"projectOption clicked\" val=\"design\">Branding</div>\n\n    return (\n      <div className='projectHeader'>\n        <div className='projectDescription'>\n          <p>{this.props.project.description}</p>\n        </div>\n        <div className=\"projectTitle\">\n          <p>{this.props.project.title}</p>\n        </div>\n\n        <div className=\"projectSelections\">\n          {this.state.clicked === null ? (// if we have two options and user hasnt done anything\n            <div>\n              <div className=\"projectOption\" val=\"uxr\">User Research</div>\n              <div className=\"projectOption\" val=\"design\">Design</div>\n            </div>\n          ) : ( // if\n            this.props.project.uxr === undefined || this.props.project.design === undefined? ( //we don't have another option to show\n              <div className=\"projectOption clicked\" val=\"design\">>(this.state === 'uxr')? User Research : Branding</div>\n            ) : (\n              <div>\n                <div className=\"projectOption clicked\" val=\"uxr\">User Research</div>\n                <div className=\"projectOption clicked\" val=\"design\">Branding</div>\n              </div>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n// Main class of this Page that handles NavBar, ProjectHeader and ProjectContent\n// Receives from props: ID of project, state of App (UXR, Graphic Design) and project to display\n// Along with HeaderOrder to display on top\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // Define what sttae we should be beginning the Project in\n    let clicked;\n    if(props.project.uxr !== undefined && props.project.design !== undefined) clicked = null; // if we have both\n    else clicked = (props.project.uxr !== undefined)? 'uxr': 'design' // if we only have one\n\n    this.state = {\n      'clicked': clicked\n    }\n  }  // boilerplate code\n\n  // TODO: pass event that knows when a section has been clicked\n  render() {\n    // Added a link here\n\n    console.log(this.props.project)\n\n    return (\n      <div>\n        <Navbar changePage={this.props.changePage} headerOrder={this.props.headerOrder}/>\n        <ProjectHeader\n          clicked={this.state.clicked} project={this.props.project}\n        />\n        <h1>Projects baby!</h1>\n        <p>ID of project: {this.props.id}</p>\n        <p>State of App: {this.props.selected}</p>\n        <p>Clicked: {this.state.clicked? \"clicked\" : \"not clicked\"}</p>\n      </div>\n    );\n  }\n}\n\nexport default Projects;\n"]},"metadata":{},"sourceType":"module"}