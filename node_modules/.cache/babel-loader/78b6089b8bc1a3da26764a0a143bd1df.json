{"ast":null,"code":"var _jsxFileName = \"/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Home.js\";\nimport React from 'react'; // import logo from '../images/logo.svg'; how to import photos; code: src={logo}\n\nimport './Home.css';\nimport '../App'; //import { render } from \"react-dom\";\n\nimport { Link } from \"react-router-dom\"; // npm install --save react-css-transition-replace\n\nimport ReactCSSTransitionReplace from 'react-css-transition-replace'; // Link to project; we define which project to link to by using the same process in App.js\n\nclass Project extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectcontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/projects/\" + this.props.title.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"project\",\n      id: this.props.title.replace(/\\s/g, ''),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.title\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      dangerouslySetInnerHTML: {\n        __html: this.props.description\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }))));\n  }\n\n} // Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\n\n\nclass ProjectList extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"projectlist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, this.props.projects.filter(function (u, i) {\n      // filter to only projects we need to show based on selection\n      if (this.props.selection === 'UXR') return u.uxr !== undefined;else return u.design !== undefined;\n    }, this).map( // then iterate them through\n    function (project, i) {\n      return React.createElement(Project, {\n        title: project.title,\n        description: project.description,\n        key: i,\n        selection: this.props.selection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    }, this));\n  }\n\n}\n\nclass MePage extends React.Component {\n  render() {\n    return (// we must return one parent div; you cant return two childs for some rando reason\n      React.createElement(\"div\", {\n        className: \"mePage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"I love you!\"), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Hows it hanging?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"left or right... heh\"), React.createElement(\"div\", {\n        className: \"extradiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"this is an extra div\"))\n    );\n  }\n\n} // Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\n\n/* Receives the following props:\n- projects: json data of all projects\n- selected: the value that we should display\n- headerOrder: the order of the headers\n- shift: how we should shift upon entering\n*/\n\n\nclass Home extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }  // boilerplate code\n  render() {\n    const selected = this.props.selected;\n    let content;\n\n    if (selected !== \"Me\") {\n      content = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidenav\",\n        style: {\n          \"opacity\": 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \" \", React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Project 1\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Project 2\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Project 3\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Project 4\"), React.createElement(\"div\", {\n        className: \"sidenavTester\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Project 5\")), React.createElement(\"div\", {\n        className: \"projectcontent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(ProjectList, {\n        projects: this.props.projects,\n        selection: selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })));\n    } else content = React.createElement(MePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n\n    const transitionTime = 400;\n    return React.createElement(\"div\", {\n      className: \"home\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mainheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Jen Goldberg\"), React.createElement(\"div\", {\n      className: \"pageselections\",\n      key: \"trying\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, // the \"this\" at the end of the map function allows us to use changePage inside the map function\n    this.props.headerOrder.map(function (u, i) {\n      /*left or right 33%, different animations\n        left shift (affecting right CSS): regular, regular from emphasis, regular to emphasis\n        right shift (affecting left CSS): regular, regular from emphasis, regular to emphasis\n      */\n      // this is being called before changing\n      console.log(\"In rewriting page selectors;\", \"\\nKey: selector\" + u.toString().replace(/\\s/g, ''), \"\\nAnimation Name: selector-shift-\" + this.props.shift + (i === 1 ? \"-emphasis\" : \"\"));\n      return React.createElement(\"div\", {\n        className: \"columnholder\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(ReactCSSTransitionReplace\n      /* TODO: fix key error to get transitions to work*/\n      , {\n        transitionName: \"fade\",\n        transitionEnterTimeout: transitionTime,\n        transitionLeaveTimeout: transitionTime,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"column\",\n        key: u,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        key: u,\n        className: i === 1 ? \"emphasis\" : \"\",\n        onClick: e => this.props.changePage(u, e),\n        dangerouslySetInnerHTML: {\n          __html: u\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))));\n    }, this))), React.createElement(ReactCSSTransitionReplace, {\n      transitionName: \"shift-\" + this.props.shift,\n      transitionEnterTimeout: transitionTime,\n      transitionLeaveTimeout: transitionTime,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      key: this.props.selected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, content)));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/cayman/Repositories/jengoldbergdesign/portfolio/src/views/Home.js"],"names":["React","Link","ReactCSSTransitionReplace","Project","Component","render","props","title","replace","__html","description","ProjectList","projects","filter","u","i","selection","uxr","undefined","design","map","project","MePage","Home","selected","content","transitionTime","headerOrder","console","log","toString","shift","e","changePage"],"mappings":"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","sourcesContent":["import React from 'react';\n// import logo from '../images/logo.svg'; how to import photos; code: src={logo}\nimport './Home.css';\nimport '../App';\n//import { render } from \"react-dom\";\nimport { Link } from \"react-router-dom\"\n\n// npm install --save react-css-transition-replace\nimport ReactCSSTransitionReplace from 'react-css-transition-replace';\n\n\n\n\n\n// Link to project; we define which project to link to by using the same process in App.js\nclass Project extends React.Component {\n  render() {\n    return (\n        <div className=\"projectcontainer\">\n          <Link to={\"/projects/\" + this.props.title.replace(/\\s/g, '')}>\n            <div className=\"project\" id={this.props.title.replace(/\\s/g, '')}>\n              <p dangerouslySetInnerHTML={{ __html: this.props.title}}/>\n              <h2 dangerouslySetInnerHTML={{ __html: this.props.description}}/>\n            </div>\n          </Link>\n        </div>\n    )\n  }\n}\n\n// Takes in the list of Projects defined in index.js, passed through App\n// Outputs a list of Project Components based on the state of the app\nclass ProjectList extends React.Component {\n\n  render() {\n    return (\n      <div className=\"projectlist\">\n        {this.props.projects.filter(function(u, i) { // filter to only projects we need to show based on selection\n          if(this.props.selection === 'UXR') return u.uxr !== undefined\n          else return u.design !== undefined\n        }, this).map( // then iterate them through\n          function(project, i) {\n            return <Project title={project.title} description={project.description} key={i} selection={this.props.selection}/>\n          }, this\n        )}\n      </div>\n    );\n  }\n}\n\nclass MePage extends React.Component {\n\n  render() {\n    return ( // we must return one parent div; you cant return two childs for some rando reason\n      <div className=\"mePage\">\n          <h2>I love you!</h2>\n          <h3>Hows it hanging?</h3>\n          <p>left or right... heh</p>\n          <div className=\"extradiv\">this is an extra div</div>\n      </div>\n    );\n  }\n}\n\n\n// Events: https://stackoverflow.com/questions/21285923/reactjs-two-components-communicating\n/* Receives the following props:\n- projects: json data of all projects\n- selected: the value that we should display\n- headerOrder: the order of the headers\n- shift: how we should shift upon entering\n*/\nclass Home extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  // }  // boilerplate code\n\n  render() {\n    const selected = this.props.selected;\n\n    let content;\n    if(selected !== \"Me\") {\n      content = (\n        <div>\n          <div className=\"sidenav\" style={{\"opacity\": 0}}> {/*TODO: implement */}\n            <div className=\"sidenavTester\">Project 1</div>\n            <div className=\"sidenavTester\">Project 2</div>\n            <div className=\"sidenavTester\">Project 3</div>\n            <div className=\"sidenavTester\">Project 4</div>\n            <div className=\"sidenavTester\">Project 5</div>\n          </div>\n          <div className=\"projectcontent\">\n            <ProjectList projects={this.props.projects} selection={selected}/>\n          </div>\n        </div>\n      )\n    }\n    else content = <MePage/>\n\n    const transitionTime = 400;\n\n    return (\n      <div className=\"home\">\n        <div className=\"mainheader\">\n          <h1>Jen Goldberg</h1>\n            <div className=\"pageselections\" key=\"trying\">\n              { // the \"this\" at the end of the map function allows us to use changePage inside the map function\n                this.props.headerOrder.map(function(u, i) {\n                  /*left or right 33%, different animations\n                    left shift (affecting right CSS): regular, regular from emphasis, regular to emphasis\n                    right shift (affecting left CSS): regular, regular from emphasis, regular to emphasis\n                  */\n                  // this is being called before changing\n                  console.log(\n                    \"In rewriting page selectors;\",\n                    \"\\nKey: selector\" + u.toString().replace(/\\s/g, ''),\n                    \"\\nAnimation Name: selector-shift-\" + this.props.shift + (i===1? \"-emphasis\":\"\")\n                  )\n\n                  return (\n                    <div className='columnholder'>\n                      <ReactCSSTransitionReplace /* TODO: fix key error to get transitions to work*/\n                        transitionName=\"fade\"\n                        transitionEnterTimeout={transitionTime}\n                        transitionLeaveTimeout={transitionTime}\n                      >\n                        <div className=\"column\" key={u}>\n                          <span\n                            key={u}\n                            className={i===1? \"emphasis\": \"\"}\n                            onClick={(e) => this.props.changePage(u, e)}\n                            dangerouslySetInnerHTML={{ __html: u}}\n                          />\n                        </div>\n\n                      </ReactCSSTransitionReplace>\n                    </div>\n                  )\n                }, this)\n              }\n            </div>\n        </div>\n\n        <ReactCSSTransitionReplace\n          transitionName={\"shift-\" + this.props.shift}\n          transitionEnterTimeout={transitionTime}\n          transitionLeaveTimeout={transitionTime}\n        >\n          <div className=\"main\" key={this.props.selected}>\n              {content}\n          </div>\n        </ReactCSSTransitionReplace>\n\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}